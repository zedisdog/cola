package services

import (
	"errors"
	"github.com/dgrijalva/jwt-go"
	"github.com/gogf/gf/util/gconv"
	"github.com/spf13/viper"
	"github.com/zedisdog/cola/auth"
	"github.com/zedisdog/cola/tools"
	"{{.}}/internal/dao"
)

type AccountService interface {
	Login(username string, password string) (token string, err error)
}

var Account = &account{
	accountDao: dao.Account,
}

type account struct {
	accountDao dao.AccountDao
}

func (a *account) Login(username string, password string) (token string, err error) {
	account, err := a.accountDao.FindByUsername(username)
	if err != nil {
		return
	}
	if !tools.CheckHash(account.Password, password) {
		err = errors.New("用户名或者密码错误")
	}
	token, err = auth.GenerateToken([]byte(viper.GetString("auth.key")), jwt.StandardClaims{
		Id: gconv.String(account.ID),
	})
	return
}
